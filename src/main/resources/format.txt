Craftable things:
- Ore Refinery (may need to be custom UI)
  + Slag
  + Purified Ore Chunk [best]
  + Impure Ore Chunk [can be refined]
  + Unstable Ore Chunk [can't be refined, may explode prematurely]

- Biodiesel Reactor [water+plants+meat] (may need to be custom UI)
  + Waste Water
  + Biofuel

- Warhead (may need to have a crafting system with custom UI)
  + An amount of Ore Chunks

- Targeting Computer

- Launch Station

===
Craft a Hull
Warhead - Hull - Computer (optional) = Rocket
- Can't place down until connected to station
Launch GUI can sync, add fuel, and launch rocket when placed.

Rocket Foundry to craft rockets


Mix a custom amount of Biodiesel, a targeting computer, and one Warhead to create a Rocket (can be good, unstable, or faulty)
Connect the rocket to a Launch Station to determine a target. If no computer is added, or if they are not connected, the rocket can go off on a random nearby target.

Place a rocket item down to auto-build a schematic (if enough room)

Fuel added determines how far it can fly from placement location

Use a Launch Station to prime the rocket. Can also disarm, self-destruct. Determine/change target before launch.

Timer before rocket lands. Can receive some operations during this time.

Control eating the biofuel, falling with unstable stuff, etc.
Support shift-clicking into the inventory

Support environmental interactions. If rockets/fuel/chunks/etc are used in traditional ways (furnace, burned, etc.),
blow things up.


====
Storage needs
====

Most data for the rocket will be kept in item lore/metadata.
Settings file for misc. needs.
Block UI mapper.


ItemStack (Rocket):
- Fuel amount
- Connected Launch Station
- If equipped with targeting computer (flag checked by Launch Station, launch sequence will determine target)
- Warhead type


===============

The BlockUI shouldn't be persisted/serialized, it should be created anew each time the plugin loads.
This means its contents should be managed elsewhere.

The mapper will already know the location and type of the block. At disable, perhaps it looks at the gui and saves the
contents itself. Then, on enable, it can read its own list and update the gui contents in the new object.